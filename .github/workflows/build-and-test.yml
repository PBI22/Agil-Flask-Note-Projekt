name: BuildTest
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Running pytest
      run: |
        pytest tests/ --cov=hello_app --cov-report=xml --cov-report=html --disable-warnings
   
    - name: Run Pylint on all files # to validate each file based on threshold
      continue-on-error: true
      run: |
        > tests/pylint_testreport.txt
        find hello_app tests -type f -name '*.py' | while read file; do pylint --max-line-length=128 -j 0 "$file" >> pylint_testreport.txt || true; done
        echo "Pylint tests done"
    
    - name: Check Pylint scores
      run: python tests/eval_pylint_scores.py 8.0 # threshold value , should probaly be a env variable later on

    - name: Making a combined pylint report for all files # to pass to SonarCloud
      continue-on-error: true
      run: |
       pylint --max-line-length=128 hello_app tests > tests/pylint_report.txt

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Zip artifact for deployment
      run: zip release.zip ./* -r

    - name: Upload artifact for deployment jobs
      uses: actions/upload-artifact@v4
      with:
        name: python-app
        path: |
          release.zip
          !venv/